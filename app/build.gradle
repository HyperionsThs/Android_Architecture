apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: '../autodimension.gradle'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.example.framgia.android_architecture"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    dexOptions {
        javaMaxHeapSize "4g"
    }
    signingConfigs {
        def signFile = file("../local.properties")
        def signingProps = new Properties()
        debug {
            storeFile file("../keystores/android.jks")
            storePassword "Android123456"
            keyAlias "android"
            keyPassword "androidpw"
        }
        release {
            signingProps.load(new FileInputStream(signFile))
            storeFile file("../keystores/android.jks")
            storePassword signingProps['storePassword']
            keyAlias signingProps['keyAlias']
            keyPassword signingProps['keyPassword']
        }
    }
    buildTypes {
        debug {
            signingConfigs.debug
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        dev {
            versionNameSuffix = "dev"
            applicationIdSuffix = ".dev"
            manifestPlaceholders = [applicationName: "DEV"]
            signingConfig signingConfigs.debug
        }
        prd {
            manifestPlaceholders = [applicationName: "@string/app_name"]
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "default"

    androidExtensions {
        experimental = true
    }

    kapt {
        useBuildCache = true
    }

    kapt {
        mapDiagnosticLocations = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/proguard/coroutines.pro'
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
        density {
            // This property is set to true by default.
            enableSplit = true
        }
        abi {
            // This property is set to true by default.
            enableSplit = true
        }
    }

    configurations.all {
        exclude group: "io.reactivex", module: "rxjava"
    }

    lintOptions {
        disable 'MissingTranslation'
        check 'Interoperability'
        disable 'GradleDependency'
        abortOnError false
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true
        quiet true
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support libraries
    implementation 'androidx.appcompat:appcompat:1.2.0-alpha01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxjava:2.2.12"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.6.1"
    implementation "com.squareup.retrofit2:converter-gson:2.6.1"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:4.2.0"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50"

    // Koin
    implementation 'org.koin:koin-androidx-viewmodel:2.0.1'
    implementation "org.koin:koin-androidx-ext:2.0.1"
    implementation "org.koin:koin-androidx-scope:2.0.1"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.2"

    // KTX
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0-rc03"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-rc03"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0-rc03"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //Leak Canary
    implementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'

    //Lottie
    implementation 'com.airbnb.android:lottie:3.0.7'
}
